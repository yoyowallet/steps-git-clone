title: "Git Clone Repository"
summary: Clone a repository to the specified path on the VM
description: |
  Clones a repository based on the provided inputs.

  If a `pull_request_id` is provided, then all other git checkout parameters will be ignored.
  If a git commit is provided, it will ignore the tag and branch parameters.
  If a tag is provided instead of a git commit, then it will ignore the branch parameter.
  If no `branch` parameter is provided, then it'll skip the `git checkout`.
website: https://github.com/bitrise-io/steps-git-clone
source_code_url: https://github.com/bitrise-io/steps-git-clone
support_url: https://github.com/bitrise-io/steps-git-clone/issues
type_tags:
  - utility
is_requires_admin_user: false
is_always_run: false
is_skippable: false
run_if: .IsCI
toolkit:
  go:
    package_name: github.com/bitrise-io/steps-git-clone
inputs:
  - repository_url: "$GIT_REPOSITORY_URL"
    opts:
      title: "Git repository URL"
      is_required: true
      is_dont_change_value: true
  - clone_into_dir: "$BITRISE_SOURCE_DIR"
    opts:
      title: "Clone destination (local) directory path"
      is_required: true
  - commit: "$BITRISE_GIT_COMMIT"
    opts:
      category: Clone Config
      title: "Git Commit to clone"
      is_dont_change_value: true
  - tag: "$BITRISE_GIT_TAG"
    opts:
      category: Clone Config
      title: "Git Tag to clone"
      is_dont_change_value: true
  - branch: "$BITRISE_GIT_BRANCH"
    opts:
      category: Clone Config
      title: "Git Branch to clone"
      is_dont_change_value: true
  - branch_dest: "$BITRISEIO_GIT_BRANCH_DEST"
    opts:
      category: Clone Config
      title: "Destination git Branch, used for pull requests"
      is_dont_change_value: true
  - pull_request_id: "$PULL_REQUEST_ID"
    opts:
      category: Clone Config
      title: "Pull request ID on GitHub"
      is_dont_change_value: true
  - pull_request_repository_url: "$BITRISEIO_PULL_REQUEST_REPOSITORY_URL"
    opts:
      category: Clone Config
      title: "Pull request git URL"
      is_dont_change_value: true
  - pull_request_merge_branch: "$BITRISEIO_PULL_REQUEST_MERGE_BRANCH"
    opts:
      category: Clone Config
      title: "Merged pull request branch"
      is_dont_change_value: true
  - update_submodules: "yes"
    opts:
      category: Clone Config
      title: Update the registered submodules?
      summary: |-
        Update the registered submodules?
      description: |-
        Update the registered submodules?
      value_options:
      - "yes"
      - "no"
  - clone_depth:
    opts:
      category: Clone Config
      title: "Clone depth"
      description: |-
        Limit fetching to the specified number of commits.
        The value should be a decimal number, for example `10`.
  - clone_depth_manual_merge:
    opts:
      category: Clone Config
      title: "Clone depth (Manual Merge)"
      description: |-
        Limit fetching to the specified number of commits.
        The value should be a decimal number, for example `10`.
        The value is used to limit the clone depth on the target branch.
        If the specified depth doesn't allow a merge-base the clone will clone the full history.
  - reset_repository: "No"
    opts:
      category: Debug
      summary: Reset repository contents with git reset --hard HEAD and git clean -f after repository updated
      title: Reset repository
      value_options:
      - "No"
      - "Yes"
  - manual_merge: "yes"
    opts:
      category: Debug
      title: Manual merge
      summary:  Prefer to do a manual `git merge` by default.
      description: |-
        Prefer to do a manual `git merge` by default.
        When the Pull Request is from a GitHub or Bitbucket private fork repository set this to `"no"`.
      value_options:
      - "yes"
      - "no"
  - build_url: "$BITRISE_BUILD_URL"
    opts:
      category: Debug
      title: "Bitrise Build URL"
      summary: |-
        Unique build URL of this build on Bitrise.io
      description: |-
        Unique build URL of this build on Bitrise.io
      is_dont_change_value: true
  - build_api_token: "$BITRISE_BUILD_API_TOKEN"
    opts:
      category: Debug
      title: Bitrise Build API Token
      summary: |-
        The build's API Token for the build on Bitrise.io
      description: |-
        The build's API Token for the build on Bitrise.io
      is_dont_change_value: true
      is_sensitive: true
outputs:
  - GIT_CLONE_COMMIT_HASH:
    opts:
      title: "Cloned git commit's commit hash"
  - GIT_CLONE_COMMIT_MESSAGE_SUBJECT:
    opts:
      title: "Cloned git commit's message subject"
  - GIT_CLONE_COMMIT_MESSAGE_BODY:
    opts:
      title: "Cloned git commit's message body"
  - GIT_CLONE_COMMIT_COUNT:
    opts:
      title: "Cloned git commit counts"
      description: |-
        Count will only work properly if no `--depth` option is set.

        If `--depth` is set then the history truncated to the specified number of commits. Count will **not** fail but will be the clone depth.
  - GIT_CLONE_COMMIT_AUTHOR_NAME:
    opts:
      title: "Cloned git commit's author name"
  - GIT_CLONE_COMMIT_AUTHOR_EMAIL:
    opts:
      title: "Cloned git commit's author email address"
  - GIT_CLONE_COMMIT_COMMITER_NAME:
    opts:
      title: "Cloned git commit's committer name"
  - GIT_CLONE_COMMIT_COMMITER_EMAIL:
    opts:
      title: "Cloned git commit's committer email"
